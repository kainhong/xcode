{
  "author":"Kain",
  "version":"1.2.7",
  "userSecure":"",
  "currTypeMapperGroupName":"Default",
  "currTemplateGroupName":"SpringBoot",
  "currColumnConfigGroupName":"Default",
  "currGlobalConfigGroupName":"Default",
  "typeMapper":{
    "Default":{
      "name":"Default",
      "elementList":[
        {
          "matchType":"REGEX",
          "columnType":"varchar(\\(\\d+\\))?",
          "javaType":"java.lang.String"
        },
        {
          "matchType":"REGEX",
          "columnType":"char(\\(\\d+\\))?",
          "javaType":"java.lang.String"
        },
        {
          "matchType":"REGEX",
          "columnType":"(tiny|medium|long)*text",
          "javaType":"java.lang.String"
        },
        {
          "matchType":"REGEX",
          "columnType":"decimal(\\(\\d+,\\d+\\))?",
          "javaType":"java.lang.Double"
        },
        {
          "matchType":"ORDINARY",
          "columnType":"integer",
          "javaType":"java.lang.Integer"
        },
        {
          "matchType":"REGEX",
          "columnType":"(tiny|small|medium)*int(\\(\\d+\\))?(\\Wunsigned)*",
          "javaType":"java.lang.Integer"
        },
        {
          "matchType":"ORDINARY",
          "columnType":"int4",
          "javaType":"java.lang.Integer"
        },
        {
          "matchType":"ORDINARY",
          "columnType":"int8",
          "javaType":"java.lang.Long"
        },
        {
          "matchType":"REGEX",
          "columnType":"bigint(\\(\\d+\\))?",
          "javaType":"java.lang.Long"
        },
        {
          "matchType":"ORDINARY",
          "columnType":"date",
          "javaType":"java.util.Date"
        },
        {
          "matchType":"ORDINARY",
          "columnType":"datetime",
          "javaType":"java.util.Date"
        },
        {
          "matchType":"ORDINARY",
          "columnType":"timestamp",
          "javaType":"java.util.Date"
        },
        {
          "matchType":"ORDINARY",
          "columnType":"time",
          "javaType":"java.time.LocalTime"
        },
        {
          "matchType":"ORDINARY",
          "columnType":"boolean",
          "javaType":"java.lang.Boolean"
        }
      ]
    }
  },
  "template":{
    "SpringBoot":{
      "name":"SpringBoot",
      "elementList":[
        {
          "name":"controller",
          "uri":"classpath:/template/springboot/controller.java.vm",
          "packageSuffix":"web",
          "path":"%s-web"
        },
        {
          "name":"repository",
          "uri":"classpath:/template/springboot/repository.java.vm",
          "packageSuffix":"",
          "path":"%s-domain"
        },
        {
          "name":"entity",
          "uri":"classpath:/template/springboot/entity.java.vm",
          "packageSuffix":"model",
          "path":"%s-model"
        },
        {
          "name":"mapper",
          "uri":"classpath:/template/springboot/mapper.xml.vm",
          "packageSuffix":"",
          "path":"%s-domain"
        },
        {
          "name":"service",
          "uri":"classpath:/template/springboot/service.java.vm",
          "packageSuffix":"",
          "path":"%s-domain"
        },
        {
          "name":"serviceImpl",
          "uri":"classpath:/template/springboot/serviceImpl.java.vm",
          "packageSuffix":"",
          "path":"%s-domain"
        },
        {
          "name":"manager",
          "uri":"classpath:/template/springboot/manager.java.vm",
          "packageSuffix":"",
          "path":"%s-domain"
        },
        {
          "name":"managerImpl",
          "uri":"classpath:/template/springboot/managerImpl.java.vm",
          "packageSuffix":"",
          "path":"%s-domain"
        }

      ]
    },
    "Spring":{
      "name":"Spring",
      "elementList":[
        {
          "name":"controller",
          "uri":"classpath:/template/spring/controller.java.vm",
          "packageSuffix":"web",
          "path":"%s-web"
        },
        {
          "name":"repository",
          "uri":"classpath:/template/spring/repository.java.vm",
          "packageSuffix":"dal",
          "path":"%s-dal"
        },
        {
          "name":"entity",
          "uri":"classpath:/template/spring/entity.java.vm",
          "packageSuffix":"common",
          "path":"%s-common"
        },
        {
          "name":"mapper",
          "uri":"classpath:/template/spring/mapper.xml.vm",
          "packageSuffix":"dal",
          "path":"%s-dal"
        },
        {
          "name":"service",
          "uri":"classpath:/template/spring/service.java.vm",
          "packageSuffix":"service",
          "path":"%s-service"
        },
        {
          "name":"serviceImpl",
          "uri":"classpath:/template/spring/serviceImpl.java.vm",
          "packageSuffix":"service",
          "path":"%s-service"
        },
        {
          "name":"manager",
          "uri":"classpath:/template/spring/manager.java.vm",
          "packageSuffix":"manager",
          "path":"%s-manager"
        },
        {
          "name":"managerImpl",
          "uri":"classpath:/template/spring/managerImpl.java.vm",
          "packageSuffix":"manager",
          "path":"%s-manager"
        }
      ]
    }

  },
  "columnConfig":{
    "Default":{
      "name":"Default",
      "elementList":[
        {
          "title":"disable",
          "type":"BOOLEAN",
          "selectValue":""
        },
        {
          "title":"support",
          "type":"SELECT",
          "selectValue":"add,edit,query,del,ui"
        }
      ]
    }
  },
  "globalConfig":{
    "Default":{
      "name":"Default",
      "elementList":[
        {
          "name":"autoImport.vm",
          "value":"##自动导入包（仅导入实体属性需要的包，通常用于实体类）\n#foreach($import in $importList)\nimport $!import;\n#end"
        },
        {
          "name":"define.vm",
          "value":"##（Velocity宏定义）\n\n##定义设置表名后缀的宏定义，调用方式：#setTableSuffix(\"Test\")\n#macro(setTableSuffix $suffix)\n    #set($tableName = $!tool.append($tableInfo.name, $suffix))\n#end\n\n##定义设置包名后缀的宏定义，调用方式：#setPackageSuffix(\"Test\")\n#macro(setPackageSuffix $suffix)\n#if($suffix!=\"\")package #end#if($tableInfo.savePackageName!=\"\")$!{tableInfo.savePackageName}.#{end}$!suffix;\n#end\n\n##定义直接保存路径与文件名简化的宏定义，调用方式：#save(\"/entity\", \".java\")\n#macro(save $path $fileName)\n    $!callback.setSavePath($tool.append($tableInfo.savePath, $path))\n    $!callback.setFileName($tool.append($tableInfo.name, $fileName))\n#end\n\n##定义表注释的宏定义，调用方式：#tableComment(\"注释信息\")\n#macro(tableComment $desc)\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})$desc\n *\n * @author $!author\n * @since $!time.currTime()\n */\n#end\n\n##定义GET，SET方法的宏定义，调用方式：#getSetMethod($column)\n#macro(getSetMethod $column)\n\n    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {\n        return $!{column.name};\n    }\n\n    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {\n        this.$!{column.name} = $!{column.name};\n    }\n#end"
        },
        {
          "name":"init.vm",
          "value":"##初始化区域\n\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"book_\",\"\")))\n\n##参考阿里巴巴开发手册，POJO 类中布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误\n#foreach($column in $tableInfo.fullColumn)\n#if($column.name.startsWith(\"is\") && $column.type.equals(\"java.lang.Boolean\"))\n    $!column.setName($tool.firstLowerCase($column.name.substring(2)))\n#end\n#end\n\n##实现动态排除列\n#set($temp = $tool.newHashSet(\"testCreateTime\", \"otherColumn\"))\n#foreach($item in $temp)\n    #set($newList = $tool.newArrayList())\n    #foreach($column in $tableInfo.fullColumn)\n        #if($column.name!=$item)\n            ##带有反回值的方法调用时使用$tool.call来消除返回值\n            $tool.call($newList.add($column))\n        #end\n    #end\n    ##重新保存\n    $tableInfo.setFullColumn($newList)\n#end\n\n##对importList进行篡改\n#set($temp = $tool.newHashSet())\n#foreach($column in $tableInfo.fullColumn)\n    #if(!$column.type.startsWith(\"java.lang.\"))\n        ##带有反回值的方法调用时使用$tool.call来消除返回值\n        $tool.call($temp.add($column.type))\n    #end\n#end\n##覆盖\n#set($importList = $temp)"
        },
        {
          "name":"mybatisSupport.vm",
          "value":"##针对Mybatis 进行支持，主要用于生成xml文件\n#foreach($column in $tableInfo.fullColumn)\n    ##储存列类型\n    $tool.call($column.ext.put(\"sqlType\", $tool.getField($column.obj.dataType, \"typeName\")))\n    #if($tool.newHashSet(\"java.lang.String\").contains($column.type))\n        #set($jdbcType=\"VARCHAR\")\n    #elseif($tool.newHashSet(\"java.lang.Boolean\", \"boolean\").contains($column.type))\n        #set($jdbcType=\"BOOLEAN\")\n    #elseif($tool.newHashSet(\"java.lang.Byte\", \"byte\").contains($column.type))\n        #set($jdbcType=\"BYTE\")\n    #elseif($tool.newHashSet(\"java.lang.Integer\", \"int\", \"java.lang.Short\", \"short\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Long\", \"long\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Float\", \"float\", \"java.lang.Double\", \"double\").contains($column.type))\n        #set($jdbcType=\"NUMERIC\")\n    #elseif($tool.newHashSet(\"java.util.Date\", \"java.sql.Timestamp\", \"java.time.Instant\", \"java.time.LocalDateTime\", \"java.time.OffsetDateTime\", \"\tjava.time.ZonedDateTime\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #elseif($tool.newHashSet(\"java.sql.Date\", \"java.time.LocalDate\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #else\n        ##其他类型\n        #set($jdbcType=\"VARCHAR\")\n    #end\n    $tool.call($column.ext.put(\"jdbcType\", $jdbcType))\n#end\n\n##定义宏，查询所有列\n#macro(allSqlColumn)#foreach($column in $tableInfo.fullColumn)$column.obj.name#if($velocityHasNext), #end#end#end\n"
        }
      ]
    }
  }
}